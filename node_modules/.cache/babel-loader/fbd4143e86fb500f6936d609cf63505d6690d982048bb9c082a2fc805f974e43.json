{"ast":null,"code":"import axios from 'axios';\nimport { POST_MESSAGES, GET_MESSAGES, GET_MESSAGES_MSGCODE, GET_MESSAGES_ISRECEIVED, DELETE_MESSAGES_MSGCODE, GET_MESSAGES_KEYWORD } from '../modules/MessageModule.js';\nimport { getCookie } from '../modules/CookieModule.js';\nexport const callMessageRegistAPI = ({\n  form\n}) => {\n  console.log('[MessageAPICalls] callMessageRegistAPI Call');\n  const requestURL = `http://localhost:8000/messages`;\n  let date = new Date();\n  return async (dispatch, getState) => {\n    const result = await axios.post(requestURL, {\n      msgCode: form.get('msgCode'),\n      msgContent: form.get('msgContent'),\n      msgStatus: \"N\",\n      msgTime: date,\n      refProductCode: form.get('refProductCode'),\n      senderCode: form.get('senderCode'),\n      receiverCode: form.get('receiverCode'),\n      msgDeleteInfoMsgDeleteDTO: {\n        msgDeleteCode: 1,\n        msgDeleteStatus: \"N\"\n      },\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"*/*\",\n        Authorization: `Bearer ${getCookie(\"accessToken\")}`\n      },\n      body: form\n    });\n    console.log('[MessageAPICalls] callMessageRegistAPI RESULT : ', result);\n    dispatch({\n      type: POST_MESSAGES,\n      payload: result\n    });\n    return result;\n  };\n};\nexport const callMessageModalAPI = () => {\n  console.log('[MessageAPICalls] calllMessageModalAPI CALL');\n  const requestURL = `http://localhost:8000/messages`;\n  return async (dispatch, getState) => {\n    const result = await axios.get(requestURL, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"*/*\",\n        Authorization: `Bearer ${getCookie(\"accessToken\")}`\n      }\n    }).then(response => response.json());\n    console.log('[MessageAPICalls] callMessageModalAPI RESULT : ', result);\n    dispatch({\n      type: GET_MESSAGES,\n      payload: result\n    });\n  };\n};\nexport const callMessageDetailAPI = ({\n  msgCode\n}) => {\n  console.log('[MessageAPICalls] callMessageDetailAPI CALL');\n  const requestURL = `http://localhost:8000/messages/${msgCode}`;\n  return async (dispatch, getState) => {\n    const result = await axios.get(requestURL, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"*/*\",\n        Authorization: `Bearer ${getCookie(\"accessToken\")}`\n      }\n    });\n    console.log('[MessageAPICalls] callMessageDetailAPI RESULT', result);\n    if (result.status == 200) {\n      console.log('[MessageAPICalls] callMessageDetailAPI SUCCESS');\n      dispatch({\n        type: GET_MESSAGES_MSGCODE,\n        payload: result.data\n      });\n      return result;\n    }\n  };\n};\nexport const callMessageListAPI = ({\n  userCode,\n  isReceived\n}) => {\n  console.log('[MessageAPICalls] callMessageListAPI CALL');\n  const requestURL = `http://localhost:8000/users/${userCode}/messages?isReceived=${isReceived}`;\n\n  //const params = new URLSearchParams(window.location.search);\n\n  // if(params.get(\"page\")){\n  //     requestURL += `page=${params.get(\"page\")}`;\n  // }\n  // if(params.get(\"isReceived\")){\n  //     requestURL += `&isReceived=${params.get(\"isReceived\")}`;\n  // }\n\n  return async (dispatch, getState) => {\n    try {\n      const result = await axios.get(requestURL, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"*/*\",\n          Authorization: `Bearer ${getCookie(\"accessToken\")}`\n        }\n      });\n      console.log('[MessageAPICalls] callMessageListAPI RESULT', result);\n      if (result.status == 200) {\n        console.log('[MessageAPICalls] callMessageListAPI SUCCESS');\n        dispatch({\n          type: GET_MESSAGES_ISRECEIVED,\n          payload: result.data\n        });\n        return result;\n      }\n    } catch (error) {\n      console.error('[MessageAPICalls] callMessageListAPI ERROR', error);\n      return error;\n    }\n  };\n};\nexport const callMessageDeleteAPI = ({\n  msgCode\n}) => {\n  console.log('[MessageAPICalls] callMessageDeleteAPI CALL');\n  const requestURL = `http://localhost:8000/messages/${msgCode}`;\n  return async (dispatch, getState) => {\n    const result = await axios.delete(requestURL, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"*/*\",\n        Authorization: `Bearer ${getCookie(\"accessToken\")}`\n      }\n    }).then(response => response.json());\n    console.log('[MessageAPICalls] callMessageDeleteAPI RESULT', result);\n    dispatch({\n      type: DELETE_MESSAGES_MSGCODE,\n      payload: result\n    });\n  };\n};\nexport const callMessageSearchListAPI = ({\n  userCode,\n  isReceived,\n  keyword\n}) => {\n  console.log('[MessageAPICalls] callMessageSearchListAPI CALL');\n  const requestURL = `http://localhost:8000/users/${userCode}/messages/search?isReceived=${isReceived}&keyword=${keyword}`;\n  return async (dispatch, getState) => {\n    const result = await axios.get(requestURL, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"*/*\"\n      }\n    });\n    // .then(response => response.json());\n\n    console.log('[MessageAPICalls] callMessageSearchListAPI RESULT', result);\n    if (result.status == 200) {\n      console.log('[MessageAPICalls] callMessageSearchListAPI SUCCESS');\n      dispatch({\n        type: GET_MESSAGES_KEYWORD,\n        payload: result.data\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","POST_MESSAGES","GET_MESSAGES","GET_MESSAGES_MSGCODE","GET_MESSAGES_ISRECEIVED","DELETE_MESSAGES_MSGCODE","GET_MESSAGES_KEYWORD","getCookie","callMessageRegistAPI","form","console","log","requestURL","date","Date","dispatch","getState","result","post","msgCode","get","msgContent","msgStatus","msgTime","refProductCode","senderCode","receiverCode","msgDeleteInfoMsgDeleteDTO","msgDeleteCode","msgDeleteStatus","method","headers","Authorization","body","type","payload","callMessageModalAPI","then","response","json","callMessageDetailAPI","status","data","callMessageListAPI","userCode","isReceived","error","callMessageDeleteAPI","delete","callMessageSearchListAPI","keyword"],"sources":["/Users/minbumkim/Desktop/[FE]/src/apis/MessageAPICalls.js"],"sourcesContent":["import axios from 'axios';\nimport{\n    POST_MESSAGES,\n    GET_MESSAGES,\n    GET_MESSAGES_MSGCODE,\n    GET_MESSAGES_ISRECEIVED,\n    DELETE_MESSAGES_MSGCODE,\n    GET_MESSAGES_KEYWORD\n} from '../modules/MessageModule.js';\nimport { getCookie } from '../modules/CookieModule.js';\n\nexport const callMessageRegistAPI = ({form}) => {\n    console.log('[MessageAPICalls] callMessageRegistAPI Call');\n\n    const requestURL = `http://localhost:8000/messages`;\n    let date = new Date();\n\n    return async (dispatch, getState) => {\n\n        const result = await axios.post(requestURL, {\n       \n            msgCode: form.get('msgCode'),\n            msgContent: form.get('msgContent'),\n            msgStatus: \"N\",\n            msgTime: date,\n            refProductCode: form.get('refProductCode'),\n            senderCode: form.get('senderCode'),\n            receiverCode: form.get('receiverCode'),\n            msgDeleteInfoMsgDeleteDTO: {\n                    msgDeleteCode: 1,\n                    msgDeleteStatus: \"N\"\n            },\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"*/*\",\n                Authorization: `Bearer ${getCookie(\"accessToken\")}`\n            },\n            body: form\n        })\n        console.log('[MessageAPICalls] callMessageRegistAPI RESULT : ', result);\n\n        dispatch({type: POST_MESSAGES, payload: result});\n        return result;\n    }\n\n}\n\nexport const callMessageModalAPI = () => {\nconsole.log('[MessageAPICalls] calllMessageModalAPI CALL');\n\n    const requestURL = `http://localhost:8000/messages`;\n\n    return async (dispatch, getState) => {\n        const result = await axios.get(requestURL, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"*/*\",\n                Authorization: `Bearer ${getCookie(\"accessToken\")}`\n            }\n        })\n        .then(response => response.json());\n\n        console.log('[MessageAPICalls] callMessageModalAPI RESULT : ', result);\n\n        dispatch({type: GET_MESSAGES, payload: result});\n    }\n}\n\n\nexport const callMessageDetailAPI = ({msgCode}) => {\n    console.log('[MessageAPICalls] callMessageDetailAPI CALL');\n\n    const requestURL = `http://localhost:8000/messages/${msgCode}`;\n\n    return async (dispatch, getState) => {\n        const result = await axios.get(requestURL, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"*/*\",\n                Authorization: `Bearer ${getCookie(\"accessToken\")}`\n            }\n        })\n\n        console.log('[MessageAPICalls] callMessageDetailAPI RESULT', result);\n        if(result.status == 200){\n            console.log('[MessageAPICalls] callMessageDetailAPI SUCCESS');\n            dispatch({type: GET_MESSAGES_MSGCODE, payload: result.data});\n            return result;\n        }\n    }\n}\n\n\nexport const callMessageListAPI = ({userCode, isReceived}) => {\n    console.log('[MessageAPICalls] callMessageListAPI CALL');\n\n\n    const requestURL = `http://localhost:8000/users/${userCode}/messages?isReceived=${isReceived}`;\n\n    //const params = new URLSearchParams(window.location.search);\n\n    // if(params.get(\"page\")){\n    //     requestURL += `page=${params.get(\"page\")}`;\n    // }\n    // if(params.get(\"isReceived\")){\n    //     requestURL += `&isReceived=${params.get(\"isReceived\")}`;\n    // }\n\n    \n    return async (dispatch, getState) => {\n        try{\n            const result = await axios.get(requestURL, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"*/*\",\n                    Authorization: `Bearer ${getCookie(\"accessToken\")}`\n                }\n            })\n            console.log('[MessageAPICalls] callMessageListAPI RESULT', result);\n            if(result.status == 200){\n                console.log('[MessageAPICalls] callMessageListAPI SUCCESS');\n                dispatch({type: GET_MESSAGES_ISRECEIVED, payload: result.data});\n                return result;\n            }\n        }catch(error){\n            console.error('[MessageAPICalls] callMessageListAPI ERROR', error);\n            return error;\n        }\n      \n    }\n}\n\n\nexport const callMessageDeleteAPI = ({msgCode}) => {\n    console.log('[MessageAPICalls] callMessageDeleteAPI CALL');\n\n    const requestURL = `http://localhost:8000/messages/${msgCode}`;\n\n    return async(dispatch, getState) => {\n        const result = await axios.delete(requestURL, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"*/*\",\n                Authorization: `Bearer ${getCookie(\"accessToken\")}`\n            }\n        })\n        .then(response => response.json());\n\n        console.log('[MessageAPICalls] callMessageDeleteAPI RESULT', result);\n        \n        dispatch({type: DELETE_MESSAGES_MSGCODE, payload: result});\n    }\n}\n\nexport const callMessageSearchListAPI = ({userCode, isReceived, keyword}) => {\n    console.log('[MessageAPICalls] callMessageSearchListAPI CALL');\n\n    const requestURL = `http://localhost:8000/users/${userCode}/messages/search?isReceived=${isReceived}&keyword=${keyword}`;\n\n    return async(dispatch, getState) => {\n        const result = await axios.get(requestURL, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"*/*\",\n                \n            }\n        })\n       // .then(response => response.json());\n\n        console.log('[MessageAPICalls] callMessageSearchListAPI RESULT', result);\n\n        if(result.status == 200){\n            console.log('[MessageAPICalls] callMessageSearchListAPI SUCCESS');\n            dispatch({type: GET_MESSAGES_KEYWORD, payload: result.data});\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
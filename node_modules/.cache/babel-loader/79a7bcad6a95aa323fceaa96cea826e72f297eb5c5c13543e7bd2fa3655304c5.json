{"ast":null,"code":"export const callProductEditAPI = ({\n  productCode,\n  updatedFields\n}) => {\n  console.log('[ProductEditAPICalls] Product Update API Call');\n  const requestURL = `http://localhost:8000/products/${productCode}`;\n  const productDTO = {\n    productName: updatedFields.productName,\n    productThumbAddr: updatedFields.productThumbAddr,\n    refCategoryCode: updatedFields.refCategoryCode,\n    price: updatedFields.price,\n    productDesc: updatedFields.productDesc || '',\n    wishPlaceTrade: updatedFields.wishPlaceTrade || ''\n  };\n  console.log(productDTO);\n  return async (dispatch, getState) => {\n    try {\n      const response = await fetch(requestURL, {\n        method: 'PUT',\n        // PUT 메서드 사용\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': '*/*',\n          'Authorization': 'Bearer ' + window.localStorage.getItem('accessToken')\n        },\n        body: JSON.stringify(productDTO)\n      });\n      if (!response.ok) {\n        throw new Error('상품 수정에 실패했습니다.');\n      }\n      const result = await response.json();\n      console.log('[ProductEditAPICalls] callProductEditAPI RESULT:', result);\n    } catch (error) {\n      console.error('[ProductEditAPICalls] 상품 수정 API 호출 중 에러:', error);\n    }\n  };\n};","map":{"version":3,"names":["callProductEditAPI","productCode","updatedFields","console","log","requestURL","productDTO","productName","productThumbAddr","refCategoryCode","price","productDesc","wishPlaceTrade","dispatch","getState","response","fetch","method","headers","window","localStorage","getItem","body","JSON","stringify","ok","Error","result","json","error"],"sources":["/Users/minbumkim/Desktop/[FE]/src/apis/ProductEditAPICalls.js"],"sourcesContent":["export const callProductEditAPI = ({ productCode, updatedFields }) => {\n    console.log('[ProductEditAPICalls] Product Update API Call');\n  \n    const requestURL = `http://localhost:8000/products/${productCode}`;\n  \n    const productDTO = {\n      productName: updatedFields.productName,\n      productThumbAddr: updatedFields.productThumbAddr,\n      refCategoryCode: updatedFields.refCategoryCode,\n      price: updatedFields.price,\n      productDesc: updatedFields.productDesc || '',\n      wishPlaceTrade: updatedFields.wishPlaceTrade || '',\n    };\n    \n    console.log(productDTO);\n  \n    return async (dispatch, getState) => {\n      try {\n        const response = await fetch(requestURL, {\n          method: 'PUT', // PUT 메서드 사용\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': '*/*',\n            'Authorization': 'Bearer ' + window.localStorage.getItem('accessToken'),\n          },\n          body: JSON.stringify(productDTO),\n        });\n  \n        if (!response.ok) {\n          throw new Error('상품 수정에 실패했습니다.');\n        }\n  \n        const result = await response.json();\n        console.log('[ProductEditAPICalls] callProductEditAPI RESULT:', result);\n      } catch (error) {\n        console.error('[ProductEditAPICalls] 상품 수정 API 호출 중 에러:', error);\n      }\n    };\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAc,CAAC,KAAK;EAClEC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;EAE5D,MAAMC,UAAU,GAAI,kCAAiCJ,WAAY,EAAC;EAElE,MAAMK,UAAU,GAAG;IACjBC,WAAW,EAAEL,aAAa,CAACK,WAAW;IACtCC,gBAAgB,EAAEN,aAAa,CAACM,gBAAgB;IAChDC,eAAe,EAAEP,aAAa,CAACO,eAAe;IAC9CC,KAAK,EAAER,aAAa,CAACQ,KAAK;IAC1BC,WAAW,EAAET,aAAa,CAACS,WAAW,IAAI,EAAE;IAC5CC,cAAc,EAAEV,aAAa,CAACU,cAAc,IAAI;EAClD,CAAC;EAEDT,OAAO,CAACC,GAAG,CAACE,UAAU,CAAC;EAEvB,OAAO,OAAOO,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,UAAU,EAAE;QACvCY,MAAM,EAAE,KAAK;QAAE;QACfC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE,KAAK;UACf,eAAe,EAAE,SAAS,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa;QACxE,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,UAAU;MACjC,CAAC,CAAC;MAEF,IAAI,CAACS,QAAQ,CAACU,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,MAAM,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MACpCzB,OAAO,CAACC,GAAG,CAAC,kDAAkD,EAAEuB,MAAM,CAAC;IACzE,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd1B,OAAO,CAAC0B,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}